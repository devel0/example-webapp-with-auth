/* tslint:disable */
/* eslint-disable */
/**
 * ExampleWebApp API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Edit user data
 * @export
 * @interface EditUserRequestDto
 */
export interface EditUserRequestDto {
    /**
     * Existing User name or null to create a new one using ExampleWebApp.Backend.WebApi.EditUserRequestDto.EditUsername.
     * @type {string}
     * @memberof EditUserRequestDto
     */
    existingUsername?: string | null;
    /**
     * New email or null to leave unchanged.
     * @type {string}
     * @memberof EditUserRequestDto
     */
    editEmail?: string | null;
    /**
     * New username or null to leave unchanged.
     * @type {string}
     * @memberof EditUserRequestDto
     */
    editUsername?: string | null;
    /**
     * New password or null to leave unchanged.
     * @type {string}
     * @memberof EditUserRequestDto
     */
    editPassword?: string | null;
    /**
     * Roles to set to the user or null to leave unchanged.
     * @type {Array<string>}
     * @memberof EditUserRequestDto
     */
    editRoles?: Array<string> | null;
    /**
     * Set the end date of lockout.
     * The user will be unable to login until ExampleWebApp.Backend.WebApi.EditUserRequestDto.EditLockoutEnd.
     * If ExampleWebApp.Backend.WebApi.EditUserRequestDto.EditLockoutEnd is set in the past the user will be re-enabled immediately.
     * @type {Date}
     * @memberof EditUserRequestDto
     */
    editLockoutEnd?: Date | null;
}

/**
 * Check if a given object implements the EditUserRequestDto interface.
 */
export function instanceOfEditUserRequestDto(value: object): value is EditUserRequestDto {
    return true;
}

export function EditUserRequestDtoFromJSON(json: any): EditUserRequestDto {
    return EditUserRequestDtoFromJSONTyped(json, false);
}

export function EditUserRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditUserRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'existingUsername': json['existingUsername'] == null ? undefined : json['existingUsername'],
        'editEmail': json['editEmail'] == null ? undefined : json['editEmail'],
        'editUsername': json['editUsername'] == null ? undefined : json['editUsername'],
        'editPassword': json['editPassword'] == null ? undefined : json['editPassword'],
        'editRoles': json['editRoles'] == null ? undefined : json['editRoles'],
        'editLockoutEnd': json['editLockoutEnd'] == null ? undefined : (new Date(json['editLockoutEnd'])),
    };
}

export function EditUserRequestDtoToJSON(value?: EditUserRequestDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'existingUsername': value['existingUsername'],
        'editEmail': value['editEmail'],
        'editUsername': value['editUsername'],
        'editPassword': value['editPassword'],
        'editRoles': value['editRoles'],
        'editLockoutEnd': value['editLockoutEnd'] == null ? undefined : ((value['editLockoutEnd'] as any).toISOString()),
    };
}

