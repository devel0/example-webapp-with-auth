/* tslint:disable */
/* eslint-disable */
/**
 * ExampleWebApp API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * M:ExampleWebApp.Backend.WebApi.AuthController.ListUsers(System.String) api response data.
 * @export
 * @interface UserListItemResponseDto
 */
export interface UserListItemResponseDto {
    /**
     * User name.
     * @type {string}
     * @memberof UserListItemResponseDto
     */
    userName: string | null;
    /**
     * User email.
     * @type {string}
     * @memberof UserListItemResponseDto
     */
    email: string | null;
    /**
     * User roles.
     * @type {Array<string>}
     * @memberof UserListItemResponseDto
     */
    roles: Array<string> | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserListItemResponseDto
     */
    disabled: boolean;
    /**
     * Access failed count.
     * @type {number}
     * @memberof UserListItemResponseDto
     */
    accessFailedCount: number;
    /**
     * Email is confirmed.
     * @type {boolean}
     * @memberof UserListItemResponseDto
     */
    emailConfirmed: boolean;
    /**
     * Lockout end (UTC). ExampleWebApp.Backend.WebApi.UserListItemResponseDto.LockoutEnabled.
     * @type {Date}
     * @memberof UserListItemResponseDto
     */
    lockoutEnd: Date | null;
    /**
     * If true the user is lockout until ExampleWebApp.Backend.WebApi.UserListItemResponseDto.LockoutEnd.
     * @type {boolean}
     * @memberof UserListItemResponseDto
     */
    lockoutEnabled: boolean;
    /**
     * User phone number.
     * @type {string}
     * @memberof UserListItemResponseDto
     */
    phoneNumber: string | null;
    /**
     * User phone number confirmed.
     * @type {boolean}
     * @memberof UserListItemResponseDto
     */
    phoneNumberConfirmed: boolean;
    /**
     * Two factor enabled.
     * @type {boolean}
     * @memberof UserListItemResponseDto
     */
    twoFactorEnabled: boolean;
}

/**
 * Check if a given object implements the UserListItemResponseDto interface.
 */
export function instanceOfUserListItemResponseDto(value: object): value is UserListItemResponseDto {
    if (!('userName' in value) || value['userName'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('roles' in value) || value['roles'] === undefined) return false;
    if (!('disabled' in value) || value['disabled'] === undefined) return false;
    if (!('accessFailedCount' in value) || value['accessFailedCount'] === undefined) return false;
    if (!('emailConfirmed' in value) || value['emailConfirmed'] === undefined) return false;
    if (!('lockoutEnd' in value) || value['lockoutEnd'] === undefined) return false;
    if (!('lockoutEnabled' in value) || value['lockoutEnabled'] === undefined) return false;
    if (!('phoneNumber' in value) || value['phoneNumber'] === undefined) return false;
    if (!('phoneNumberConfirmed' in value) || value['phoneNumberConfirmed'] === undefined) return false;
    if (!('twoFactorEnabled' in value) || value['twoFactorEnabled'] === undefined) return false;
    return true;
}

export function UserListItemResponseDtoFromJSON(json: any): UserListItemResponseDto {
    return UserListItemResponseDtoFromJSONTyped(json, false);
}

export function UserListItemResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserListItemResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'userName': json['userName'],
        'email': json['email'],
        'roles': json['roles'],
        'disabled': json['disabled'],
        'accessFailedCount': json['accessFailedCount'],
        'emailConfirmed': json['emailConfirmed'],
        'lockoutEnd': (json['lockoutEnd'] == null ? null : new Date(json['lockoutEnd'])),
        'lockoutEnabled': json['lockoutEnabled'],
        'phoneNumber': json['phoneNumber'],
        'phoneNumberConfirmed': json['phoneNumberConfirmed'],
        'twoFactorEnabled': json['twoFactorEnabled'],
    };
}

export function UserListItemResponseDtoToJSON(value?: UserListItemResponseDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'userName': value['userName'],
        'email': value['email'],
        'roles': value['roles'],
        'disabled': value['disabled'],
        'accessFailedCount': value['accessFailedCount'],
        'emailConfirmed': value['emailConfirmed'],
        'lockoutEnd': (value['lockoutEnd'] == null ? null : (value['lockoutEnd'] as any).toISOString()),
        'lockoutEnabled': value['lockoutEnabled'],
        'phoneNumber': value['phoneNumber'],
        'phoneNumberConfirmed': value['phoneNumberConfirmed'],
        'twoFactorEnabled': value['twoFactorEnabled'],
    };
}

