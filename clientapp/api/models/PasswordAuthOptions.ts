/* tslint:disable */
/* eslint-disable */
/**
 * ExampleWebApp API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PasswordAuthOptions
 */
export interface PasswordAuthOptions {
    /**
     * 
     * @type {boolean}
     * @memberof PasswordAuthOptions
     */
    requireDigit: boolean;
    /**
     * 
     * @type {number}
     * @memberof PasswordAuthOptions
     */
    requiredLength: number;
    /**
     * 
     * @type {number}
     * @memberof PasswordAuthOptions
     */
    requiredUniqueChars: number;
    /**
     * 
     * @type {boolean}
     * @memberof PasswordAuthOptions
     */
    requireLowercase: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PasswordAuthOptions
     */
    requireNonAlphanumeric: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PasswordAuthOptions
     */
    requireUppercase: boolean;
}

/**
 * Check if a given object implements the PasswordAuthOptions interface.
 */
export function instanceOfPasswordAuthOptions(value: object): value is PasswordAuthOptions {
    if (!('requireDigit' in value) || value['requireDigit'] === undefined) return false;
    if (!('requiredLength' in value) || value['requiredLength'] === undefined) return false;
    if (!('requiredUniqueChars' in value) || value['requiredUniqueChars'] === undefined) return false;
    if (!('requireLowercase' in value) || value['requireLowercase'] === undefined) return false;
    if (!('requireNonAlphanumeric' in value) || value['requireNonAlphanumeric'] === undefined) return false;
    if (!('requireUppercase' in value) || value['requireUppercase'] === undefined) return false;
    return true;
}

export function PasswordAuthOptionsFromJSON(json: any): PasswordAuthOptions {
    return PasswordAuthOptionsFromJSONTyped(json, false);
}

export function PasswordAuthOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasswordAuthOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'requireDigit': json['requireDigit'],
        'requiredLength': json['requiredLength'],
        'requiredUniqueChars': json['requiredUniqueChars'],
        'requireLowercase': json['requireLowercase'],
        'requireNonAlphanumeric': json['requireNonAlphanumeric'],
        'requireUppercase': json['requireUppercase'],
    };
}

export function PasswordAuthOptionsToJSON(value?: PasswordAuthOptions | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'requireDigit': value['requireDigit'],
        'requiredLength': value['requiredLength'],
        'requiredUniqueChars': value['requiredUniqueChars'],
        'requireLowercase': value['requireLowercase'],
        'requireNonAlphanumeric': value['requireNonAlphanumeric'],
        'requireUppercase': value['requireUppercase'],
    };
}

